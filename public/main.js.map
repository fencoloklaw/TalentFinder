{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/scheduler/scheduler.component.css","webpack:///./src/app/components/scheduler/scheduler.component.html","webpack:///./src/app/components/scheduler/scheduler.component.ts","webpack:///./src/app/components/searchtalent/searchtalent.component.css","webpack:///./src/app/components/searchtalent/searchtalent.component.html","webpack:///./src/app/components/searchtalent/searchtalent.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/toaster.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'app works!';\r\n    constructor(private toastr: ToastrService,\r\n               ) {\r\n    }\r\n\r\n}\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpModule} from '@angular/http';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {NavbarComponent} from './components/navbar/navbar.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {RegisterComponent} from './components/register/register.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {ProfileComponent} from './components/profile/profile.component';\r\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\r\nimport {SearchtalentComponent} from './components/searchtalent/searchtalent.component';\r\n\r\nimport {ValidateService} from './services/validate.service';\r\nimport {AuthService} from './services/auth.service';\r\nimport {AuthGuard} from './guards/auth.guard';\r\nimport {SearchService} from './services/search.service';\r\nimport {DataService} from \"./services/data.service\";\r\nimport {\r\n    MatAutocompleteModule,\r\n    MatButtonModule, MatButtonToggleModule,\r\n    MatCardActions,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule, MatNativeDateModule,\r\n    MatPaginatorModule, MatRadioModule, MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatToolbarModule\r\n} from \"@angular/material\";\r\nimport {ScrollDispatchModule} from \"@angular/cdk/scrolling\";\r\nimport { SchedulerComponent } from './components/scheduler/scheduler.component';\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {ToasterService} from \"./services/toaster.service\";\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', component: HomeComponent},\r\n    {path: 'register', component: RegisterComponent},\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\r\n    {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\r\n    {path: 'searchtalent', component: SearchtalentComponent}\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavbarComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        HomeComponent,\r\n        ProfileComponent,\r\n        DashboardComponent,\r\n        SearchtalentComponent,\r\n        SchedulerComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(appRoutes),\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        ScrollDispatchModule,\r\n        MatListModule,\r\n        MatStepperModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        MatPaginatorModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        MatRadioModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatNativeDateModule,\r\n        FlexLayoutModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        ToastrModule.forRoot({\r\n            timeOut: 3000,\r\n            closeButton: true\r\n        }),\r\n    ],\r\n    providers: [ValidateService, AuthService, AuthGuard, SearchService, DataService, ToasterService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \".example-card {\\r\\n    width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h2 class=\\\"page-header\\\">Dashboard</h2>\\r\\n    <mat-card>Welcome to Dashboard</mat-card>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ValidateService} from \"../../services/validate.service\";\r\nimport {AuthService} from \"../../services/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n    email: String;\r\n\r\n    constructor(private validateService: ValidateService,\r\n                private authService: AuthService,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","module.exports = \"@media (max-width: 600px) {\\r\\n    .column {\\r\\n        float: left;\\r\\n        width: 100%;\\r\\n    }\\r\\n}\"","module.exports = \"<div class=\\\"text-center jumbotron\\\">\\r\\n    <!--<div class=\\\"h-25 text-left mb-md-5 h1\\\">TalentFinder</div>-->\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"h-50\\\">\\r\\n            <form class=\\\"d-inline\\\" (submit)=\\\"onSearchSubmit()\\\">\\r\\n                <div class=\\\"row container mr-auto ml-auto text-left\\\">\\r\\n                    <div class=\\\"col-sm-5 form-group w-100\\\">\\r\\n                        <label class=\\\"font-weight-bold \\\" for=\\\"skillInput\\\">EXPERTISE</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"skillInput\\\" name=\\\"skillInput\\\" [(ngModel)]=\\\"skillInput\\\" class=\\\"form-control form-rounded\\\">\\r\\n                        <!--<label >EXPERTISE</label>-->\\r\\n                        <!--<mat-form-field class=\\\"example-full-width\\\">-->\\r\\n                            <!--<input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">-->\\r\\n                            <!--<mat-autocomplete #auto=\\\"matAutocomplete\\\">-->\\r\\n                                <!--<mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">-->\\r\\n                                    <!--{{option}}-->\\r\\n                                <!--</mat-option>-->\\r\\n                            <!--</mat-autocomplete>-->\\r\\n                        <!--</mat-form-field>-->\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-5 form-group w-100\\\">\\r\\n                        <label class=\\\"font-weight-bold\\\" for=\\\"whereInput\\\">WHERE</label>\\r\\n                        <input type=\\\"text\\\" id=\\\"whereInput\\\" name=\\\"whereInput\\\" [(ngModel)]=\\\"whereInput\\\" class=\\\"form-control form-rounded\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 form-group w-100\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"w-100 btn btn-primary\\\" style=\\\"margin-top:2.0rem !important;\\\">Find Talent</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"h-25\\\">\\r\\n            <div *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"mt-5\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <label>Looking for projects?</label>\\r\\n                        <button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/register']\\\">\\r\\n                            <span>Create a Profile</span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--<div class=\\\"row mt-lg-3\\\">-->\\r\\n                    <!--<div class=\\\"col\\\">-->\\r\\n                        <!--<label>Employers looking to create Projects?</label>-->\\r\\n                        <!--<button class=\\\"btn btn-outline-secondary\\\" [routerLink]=\\\"['/registerBusiness']\\\">-->\\r\\n                            <!--<span>Register here!</span>-->\\r\\n                        <!--</button>-->\\r\\n                    <!--</div>-->\\r\\n                <!--</div>-->\\r\\n            </div>\\r\\n            <div *ngIf=\\\"authService.loggedIn()\\\" class=\\\"row mb-3 mt-5\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <h3>Local Talent</h3>\\r\\n                    <div id=\\\"localTalentScroll\\\">\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {ValidateService} from '../../services/validate.service';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {DataService} from \"../../services/data.service\";\r\nimport {SearchService} from \"../../services/search.service\";\r\nimport {ToasterService} from \"../../services/toaster.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit{\r\n\r\n    skillInput: String;\r\n    whereInput: String;\r\n\r\n    // myControl = new FormControl();\r\n    // options: string[] = ['One', 'Two', 'Three'];\r\n    // filteredOptions: Observable<string[]>;\r\n\r\n    constructor(private router: Router,\r\n                private validateService: ValidateService,\r\n                private authService: AuthService,\r\n                private dataService: DataService,\r\n                private searchService: SearchService,\r\n                private toasterService: ToasterService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        // this.filteredOptions = this.myControl.valueChanges\r\n        //     .pipe(\r\n        //         startWith(''),\r\n        //         map(value => this._filter(value))\r\n        //     );\r\n\r\n        this.skillInput = \"\";\r\n        this.whereInput = \"\";\r\n        this.whereInput = this.searchService.city;\r\n        if(this.whereInput == \"\"){\r\n            this.findLocation();\r\n        }\r\n    }\r\n\r\n    // private _filter(value: string): string[] {\r\n    //     const filterValue = value.toLowerCase();\r\n    //\r\n    //     return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n    // }\r\n\r\n    onSearchSubmit() {\r\n        if (this.validateService.validateNotNull(this.whereInput)) {\r\n            this.dataService.skillData = this.skillInput;\r\n            this.dataService.whereData = this.whereInput;\r\n            this.router.navigate(['searchtalent']);\r\n        }\r\n        else {\r\n            this.toasterService.warning('Where field has no value');\r\n        }\r\n    }\r\n\r\n    findLocation():void {\r\n        this.searchService.getAddress()\r\n            .subscribe(res => {\r\n            if(res){\r\n                this.whereInput = res.city;\r\n                this.searchService.setAddress(res);\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 class=\\\"page-header\\\">Login</h1>\\r\\n    <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Email Address :</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Password :</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n        </div>\\r\\n        <input type=\\\"submit\\\" [disabled]=\\\"!validLogin()\\\" class=\\\"btn btn-block btn-primary\\\" value=\\\"Login\\\">\\r\\n    </form>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {ValidateService} from \"../../services/validate.service\";\r\nimport {ToasterService} from \"../../services/toaster.service\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    email: String;\r\n    password: String;\r\n\r\n    constructor(private authService: AuthService,\r\n                private router: Router,\r\n                private validateService: ValidateService,\r\n                private toasterService: ToasterService\r\n                ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.email = \"\";\r\n        this.password = \"\";\r\n\r\n    }\r\n\r\n    onLoginSubmit() {\r\n        const user = {\r\n            email: this.email,\r\n            password: this.password\r\n        };\r\n\r\n        this.authService.authenticateUser(user).subscribe(data => {\r\n            if (data.success) {\r\n                this.authService.storeUserData(data.token, data.user);\r\n                this.router.navigate(['dashboard']).then(() => {\r\n                    this.toasterService.success('You are now logged in');\r\n                });\r\n            } else {\r\n                this.router.navigate(['login']).then(() => {\r\n                    this.toasterService.warning(data.msg);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    validLogin(){\r\n        if((this.email.length > 0) && (this.password.length > 0) && this.validateService.validateEmail(this.email)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary floating-action-navbar\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">TalentFinder</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n            <li class=\\\"nav-item text-right\\\" *ngIf=\\\"authService.loggedIn()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-right\\\" *ngIf=\\\"authService.loggedIn()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-right\\\" *ngIf=\\\"!authService.loggedIn()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-right\\\" *ngIf=\\\"!authService.loggedIn()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-right\\\" *ngIf=\\\"authService.loggedIn()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {ToasterService} from \"../../services/toaster.service\";\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n\r\n    constructor(private authService: AuthService,\r\n                private router: Router,\r\n                private toasterService: ToasterService) {\r\n    }\r\n\r\n\r\n    onLogoutClick() {\r\n        this.authService.logout();\r\n        this.router.navigate(['/login']).then(()=> {\r\n            this.toasterService.success('You are logged out');\r\n        });\r\n        return false;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <form (submit)=\\\"onUpdateProfile()\\\">\\r\\n        <h2 class=\\\"page-header\\\">\\r\\n            <span>Profile</span>\\r\\n        </h2>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <img class=\\\"img-thumbnail w-50\\\" src=\\\"http://i0.kym-cdn.com/photos/images/newsfeed/000/581/296/c09.jpg\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <img class=\\\"img-thumbnail w-50 float-right\\\" src=\\\"https://www.patternfly.org/pattern-library/data-visualization/pie-chart/img/right-legend-pie-chart.png\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>First Name : </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Last Name : </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Personal Summary : </label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"4\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\" placeholder=\\\"Introduction/Description\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Skill : </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"skill\\\" name=\\\"skill\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Past Experience : </label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"4\\\" placeholder=\\\"Past Experience\\\" name=\\\"experience\\\" [(ngModel)]=\\\"experience\\\"></textarea>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>City : </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n            <label>Province/State : </label>\\r\\n            <select [(ngModel)]=\\\"region\\\" name=\\\"region\\\" class=\\\"form-control custom-select required\\\">\\r\\n                <option value=\\\"Alberta\\\">Alberta</option>\\r\\n                <option value=\\\"British Columbia\\\">British Columbia</option>\\r\\n                <option value=\\\"Manitoba\\\">Manitoba</option>\\r\\n                <option value=\\\"New Brunswick\\\">New Brunswick</option>\\r\\n                <option value=\\\"Newfoundland and Labrador\\\">Newfoundland and Labrador</option>\\r\\n                <option value=\\\"Nova Scotia\\\">Nova Scotia</option>\\r\\n                <option value=\\\"Ontario\\\">Ontario</option>\\r\\n                <option value=\\\"Prince Edward Island\\\">Prince Edward Island</option>\\r\\n                <option value=\\\"Quebec\\\">Quebec</option>\\r\\n                <option value=\\\"Saskatchewan\\\">Saskatchewan</option>\\r\\n                <option value=\\\"Northwest Territories\\\">Northwest Territories</option>\\r\\n                <option value=\\\"Nunavut\\\">Nunavut</option>\\r\\n                <option value=\\\"Yukon\\\">Yukon</option>\\r\\n            </select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mb-3\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Certificates/Licenses : </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"certificates\\\" name=\\\"certificates\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <label>Awards : </label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"awards\\\" name=\\\"awards\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"text-center floating-action-button\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\" value=\\\"Update\\\">\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {ToasterService} from \"../../services/toaster.service\";\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    _id : String;\r\n    firstName: String;\r\n    lastName: String;\r\n    email: String;\r\n    skill: String;\r\n    experience : String;\r\n    volunteer : String;\r\n    city : String;\r\n    region : String;\r\n    description : String;\r\n    certificates: String;\r\n    awards: String;\r\n\r\n    constructor(private authService: AuthService,\r\n                private router: Router,\r\n                private toasterService: ToasterService\r\n                ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.authService.getProfile().subscribe(profile => {\r\n                this._id = profile.user._id;\r\n                this.firstName = profile.user.firstName;\r\n                this.lastName = profile.user.lastName;\r\n                this.email = profile.user.email;\r\n                this.skill = profile.user.skill;\r\n                this.experience = profile.user.experience;\r\n                this.volunteer = profile.user.volunteer;\r\n                this.city = profile.user.city;\r\n                this.region = profile.user.region;\r\n                this.description = profile.user.description;\r\n                this.certificates = profile.user.certificates;\r\n                this.awards = profile.user.awards;\r\n            },\r\n            err => {\r\n                console.log(err);\r\n                return false;\r\n            });\r\n    }\r\n\r\n    onUpdateProfile() {\r\n        const updateUser = {\r\n            _id: this._id,\r\n            firstName : this.firstName,\r\n            lastName : this.lastName,\r\n            email: this.email,\r\n            skill: this.skill,\r\n            experience: this.experience,\r\n            volunteer: this.volunteer,\r\n            city: this.city,\r\n            region: this.region,\r\n            description: this.description,\r\n            certificates: this.certificates,\r\n            awards: this.awards\r\n        };\r\n\r\n        this.authService.updateProfile(updateUser).subscribe(data => {\r\n            this.toasterService.success('Profile Updated');\r\n\r\n            this._id = data.user._id;\r\n            this.firstName = data.user.firstName;\r\n            this.lastName = data.user.lastName;\r\n            this.email = data.user.email;\r\n            this.skill = data.user.skill;\r\n            this.experience = data.user.experience;\r\n            this.volunteer = data.user.volunteer;\r\n            this.city = data.user.city;\r\n            this.region = data.user.region;\r\n            this.description = data.user.description;\r\n            this.certificates = data.user.certificates;\r\n            this.awards = data.user.awards;\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1 class=\\\"page-header\\\">Register</h1>\\r\\n    <form>\\r\\n        <fieldset>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>Email Address :</label>\\r\\n                    <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"email@something.com\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>First Name :</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>Last Name :</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>Skills :</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"skill\\\" name=\\\"skills\\\" class=\\\"form-control\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>City :</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>Province/State :</label>\\r\\n                    <select [(ngModel)]=\\\"region\\\" name=\\\"region\\\" class=\\\"form-control custom-select required\\\">\\r\\n                        <option value=\\\"Alberta\\\">Alberta</option>\\r\\n                        <option value=\\\"British Columbia\\\">British Columbia</option>\\r\\n                        <option value=\\\"Manitoba\\\">Manitoba</option>\\r\\n                        <option value=\\\"New Brunswick\\\">New Brunswick</option>\\r\\n                        <option value=\\\"Newfoundland and Labrador\\\">Newfoundland and Labrador</option>\\r\\n                        <option value=\\\"Nova Scotia\\\">Nova Scotia</option>\\r\\n                        <option value=\\\"Ontario\\\">Ontario</option>\\r\\n                        <option value=\\\"Prince Edward Island\\\">Prince Edward Island</option>\\r\\n                        <option value=\\\"Quebec\\\">Quebec</option>\\r\\n                        <option value=\\\"Saskatchewan\\\">Saskatchewan</option>\\r\\n                        <option value=\\\"Northwest Territories\\\">Northwest Territories</option>\\r\\n                        <option value=\\\"Nunavut\\\">Nunavut</option>\\r\\n                        <option value=\\\"Yukon\\\">Yukon</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-3\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <label>Password :</label>\\r\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n                <input type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\" value=\\\"Register\\\" (click)=\\\"onRegisterSubmit()\\\">\\r\\n            </div>\\r\\n        </fieldset>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ValidateService} from '../../services/validate.service';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {SearchService} from \"../../services/search.service\";\r\nimport {ToasterService} from \"../../services/toaster.service\";\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    email: String;\r\n    password: String;\r\n    lastName: String;\r\n    firstName: String;\r\n    skill: String;\r\n    city: String;\r\n    region: String;\r\n\r\n    constructor(private validateService: ValidateService,\r\n                private authService: AuthService,\r\n                private router: Router,\r\n                private searchService : SearchService,\r\n                private toasterService : ToasterService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.city = this.searchService.city;\r\n        this.region = this.searchService.region;\r\n        if (this.city == \"\" || this.region == \"\") {\r\n            this.findLocation();\r\n        }\r\n    }\r\n\r\n    onRegisterSubmit() {\r\n        const user = {\r\n            email: this.email,\r\n            firstName: this.firstName,\r\n            lastName: this.lastName,\r\n            skill: this.skill,\r\n            city: this.city,\r\n            region: this.region,\r\n            password: this.password\r\n        };\r\n        //Required Fields\r\n        if (!this.validateService.validateRegister(user)) {\r\n            this.toasterService.warning('Fill in all required fields');\r\n            return false;\r\n        }\r\n\r\n        //Validate Email\r\n        if (!this.validateService.validateEmail(user.email)) {\r\n            this.toasterService.warning('Invalid email');\r\n            return false;\r\n        }\r\n\r\n        //Register User\r\n        this.authService.registerUser(user).subscribe(data => {\r\n            if(data.err){\r\n                    this.router.navigate(['/register']).then(()=>{\r\n                    this.toasterService.error('Something went wrong: ' + data.err);\r\n                });\r\n            }\r\n            this.router.navigate(['/login']).then(()=>{\r\n               this.toasterService.success('You are now registered!');\r\n            });\r\n        });\r\n    }\r\n\r\n    findLocation():void {\r\n        this.searchService.getAddress().subscribe(res => {\r\n            if(res){\r\n                this.city = res.city;\r\n                this.region = res.region;\r\n                this.searchService.setAddress(res);\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <div>\\r\\n            <button class=\\\"btn btn-primary\\\">Previous</button>\\r\\n            <button class=\\\"btn btn-secondary\\\">Today</button>\\r\\n            <button class=\\\"btn btn-primary\\\">Next</button>\\r\\n        </div>\\r\\n        <div>\\r\\n            <button class=\\\"btn btn-primary\\\">Previous</button>\\r\\n            <button class=\\\"btn btn-secondary\\\">Today</button>\\r\\n            <button class=\\\"btn btn-primary\\\">Next</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-scheduler',\r\n  templateUrl: './scheduler.component.html',\r\n  styleUrls: ['./scheduler.component.css']\r\n})\r\nexport class SchedulerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <form class=\\\"p-3 d-inline\\\" (submit)=\\\"onSearchSubmit()\\\">\\r\\n        <div class=\\\"row container mr-auto ml-auto text-left\\\">\\r\\n            <div class=\\\"col-sm-5 form-group w-100\\\">\\r\\n                <label class=\\\"font-weight-bold \\\" for=\\\"skillInput\\\">EXPERTISE</label>\\r\\n                <input type=\\\"text\\\" id=\\\"skillInput\\\" name=\\\"skillInput\\\" [(ngModel)]=\\\"skillInput\\\" class=\\\"form-control form-rounded\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-5 form-group w-100\\\">\\r\\n                <label class=\\\"font-weight-bold\\\" for=\\\"whereInput\\\">WHERE</label>\\r\\n                <input type=\\\"text\\\" id=\\\"whereInput\\\" name=\\\"whereInput\\\" [(ngModel)]=\\\"whereInput\\\" class=\\\"form-control form-rounded\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2 form-group w-100\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"w-100 btn btn-primary\\\" style=\\\"margin-top:2.0rem !important;\\\">Find Talent</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <div class=\\\"\\\">\\r\\n        <div class=\\\"mt-5\\\">\\r\\n            <div *ngIf=\\\"viewArrayProfile==true\\\" class=\\\"\\\">\\r\\n                <ul class=\\\"list-group\\\" *ngFor=\\\"let data of dataArray\\\">\\r\\n                    <button class=\\\"list-group-item list-group-item-action\\\" (click)=\\\"showProfile(data)\\\">\\r\\n                        <span>Name: {{data.firstName}} {{data.lastName}}</span>\\r\\n                        <br>\\r\\n                        <!--<span>Email: {{data.email}}</span>-->\\r\\n                        <!--<br>-->\\r\\n                        <span>Skill: {{data.skill}}</span>\\r\\n                        <br>\\r\\n                        <span>City: {{data.city}}</span>\\r\\n                    </button>\\r\\n                </ul>\\r\\n                <div>\\r\\n                    <ul class=\\\"pagination pagination-lg\\\">\\r\\n                        <button class=\\\"list-group-item list-group-item-action page-link\\\" *ngIf=\\\"currentPage>1\\\" (click)=\\\"onChangePageBack()\\\">\\r\\n                            <span>&laquo; Previous</span>\\r\\n                        </button>\\r\\n                        <button class=\\\"list-group-item list-group-item-action page-link\\\" *ngIf=\\\"currentPage<numberOfPages\\\" (click)=\\\"onChangePage()\\\">\\r\\n                            <span>Next &raquo;</span>\\r\\n                        </button>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div class=\\\"container\\\" *ngIf=\\\"dataArrayLength==0\\\">\\r\\n                    <p class=\\\"lead\\\">No users found.</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"viewArrayProfile==false\\\" class=\\\"card border-primary\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <button class=\\\"btn btn-secondary\\\" (click)=\\\"returnSearch()\\\">&laquo; Return</button>\\r\\n                    <h2>{{profile.firstName}} {{profile.lastName}}</h2>\\r\\n                    <br>\\r\\n                    <span>Email: {{profile.email}}</span>\\r\\n                    <br>\\r\\n                    <span>Skill: {{profile.skill}}</span>\\r\\n                    <br>\\r\\n                    <span>City: {{profile.city}}</span>\\r\\n                    <br>\\r\\n                    <span>Experience: {{profile.experience}}</span>\\r\\n                    <br>\\r\\n                    <span>Volunteer: {{profile.volunteer}}</span>\\r\\n                    <br>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import {Component, HostListener, OnInit} from '@angular/core';\r\nimport {ValidateService} from '../../services/validate.service';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {SearchService} from '../../services/search.service';\r\nimport {DataService} from \"../../services/data.service\";\r\nimport {ToasterService} from \"../../services/toaster.service\";\r\n\r\n@Component({\r\n    selector: 'app-searchtalent',\r\n    templateUrl: './searchtalent.component.html',\r\n    styleUrls: ['./searchtalent.component.css']\r\n})\r\nexport class SearchtalentComponent implements OnInit {\r\n    viewArrayProfile: boolean;\r\n    skillInput: String;\r\n    whereInput: String;\r\n    user: Object;\r\n    searchData : any;\r\n    dataArray : any;\r\n    dataArrayLength : Number;\r\n    numberOfPages: Number;\r\n    currentPage: any;\r\n    profile: any;\r\n    constructor(private router: Router,\r\n                private validateService: ValidateService,\r\n                private authService: AuthService,\r\n                private searchService: SearchService,\r\n                private dataService: DataService,\r\n                private  toasterService: ToasterService) {\r\n    }\r\n    ngOnInit() {\r\n        if((this.validateService.validateNotNull(this.dataService.skillData))&&(this.validateService.validateNotNull(this.dataService.whereData))){\r\n            this.skillInput = this.dataService.skillData;\r\n            this.whereInput = this.dataService.whereData;\r\n            this.onSearchSubmit();\r\n        }\r\n        else if(this.validateService.validateNotNull(this.dataService.whereData)) {\r\n            this.skillInput = \"\";\r\n            this.whereInput = this.dataService.whereData;\r\n            this.onSearchSubmit();\r\n        }\r\n        else if(this.validateService.validateNotNull(this.dataService.skillData)) {\r\n            this.skillInput = this.dataService.skillData;\r\n            this.whereInput = \"\";\r\n        }\r\n        else {\r\n            this.skillInput = \"\";\r\n            this.whereInput = \"\";\r\n            if(this.whereInput == \"\"){\r\n                this.findLocation();\r\n            }\r\n        }\r\n        this.viewArrayProfile = true;\r\n    }\r\n\r\n    onSearchSubmit() {\r\n        const search = {\r\n            skillInput: this.skillInput,\r\n            whereInput: this.whereInput\r\n        };\r\n\r\n        if (this.validateService.validateNotNull(this.whereInput)) {\r\n            this.searchService.searchUser(search).subscribe(data => {\r\n                if (data.success) {\r\n                    this.toasterService.success('Found Matches!');\r\n                    this.searchData = data;\r\n                    this.dataArrayLength = data.documents.length;\r\n                    this.numberOfPages = Math.ceil(data.documents.length/10);\r\n                    this.currentPage = 1;\r\n                    this.dataArray = data.documents.slice(this.currentPage*10 - 10, this.currentPage*10);\r\n                    this.viewArrayProfile = true;\r\n                }\r\n                else {\r\n                    this.toasterService.warning(data.msg);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.toasterService.warning('Where field has no value');\r\n        }\r\n    }\r\n\r\n    onChangePage() {\r\n        if (this.currentPage < this.numberOfPages) {\r\n            this.currentPage++;\r\n            this.dataArray = this.searchData.documents.slice(this.currentPage * 10 - 10, this.currentPage * 10);\r\n        }\r\n        else{\r\n            //do not display next\r\n        }\r\n    }\r\n\r\n    onChangePageBack() {\r\n        if (this.currentPage > 1) {\r\n            this.currentPage--;\r\n            this.dataArray = this.searchData.documents.slice(this.currentPage * 10 - 10, this.currentPage * 10);\r\n        }\r\n        else{\r\n            //do not display next\r\n        }\r\n    }\r\n\r\n    showProfile(data){\r\n        this.viewArrayProfile = false;\r\n        this.profile = data;\r\n    }\r\n\r\n    returnSearch(){\r\n        this.viewArrayProfile = true;\r\n        this.dataArray = this.searchData.documents.slice(this.currentPage * 10 - 10, this.currentPage * 10);\r\n        this.profile = \"\";\r\n    }\r\n\r\n    findLocation():void {\r\n        this.searchService.getAddress().subscribe(res => {\r\n            if(res){\r\n                this.whereInput = res.city;\r\n                this.searchService.setAddress(res);\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate} from '@angular/router';\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router,\r\n                private authService: AuthService) {\r\n\r\n    }\r\n\r\n    canActivate() {\r\n        if (this.authService.loggedIn()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/index\";\r\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\r\n\r\n@Injectable()\r\nexport class AuthService{\r\n    authToken: any;\r\n    user: any;\r\n    jwtHelper: JwtHelperService = new JwtHelperService();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    tokenGetter(){\r\n        return localStorage.getItem('access_token');\r\n    }\r\n\r\n    // http://localhost:8080/\r\n    registerUser(user): Observable<any> {\r\n        return this.http.post('users/register', user);\r\n    }\r\n\r\n    authenticateUser(user):Observable<any> {\r\n        return this.http.post('users/authenticate', user);\r\n    }\r\n\r\n    storeUserData(token, user) {\r\n        localStorage.setItem('access_token', token);\r\n        localStorage.setItem('user', JSON.stringify(user)); //local storage must be string\r\n        this.authToken = token;\r\n        this.user = user;\r\n    }\r\n\r\n    getProfile():Observable<any> {\r\n        this.loadToken();\r\n        let headers = new HttpHeaders().set('Authorization', this.tokenGetter());\r\n        return this.http.get('users/profile', {headers});\r\n    }\r\n\r\n    updateProfile(user):Observable<any>{\r\n        this.loadToken();\r\n        let headers = new HttpHeaders().set('Authorization', this.tokenGetter());\r\n        return this.http.put('users/updateProfile',  user,{headers});\r\n    }\r\n\r\n    loadToken() {\r\n        const token = localStorage.getItem('access_token');\r\n        this.authToken = token;\r\n    }\r\n\r\n    loggedIn() {\r\n        const refreshToken = this.tokenGetter();\r\n        return refreshToken != null && !this.jwtHelper.isTokenExpired(refreshToken);\r\n\r\n    }\r\n\r\n    logout() {\r\n        this.authToken = null;\r\n        this.user = null;\r\n        localStorage.clear();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  skillData: String;\r\n  whereData: String;\r\n  constructor() { }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n// import {Http, Headers} from '@angular/http';\r\nimport {environment} from \"../../environments/environment\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/index\";\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n    search: any;\r\n    city: any = \"\";\r\n    region: any = \"\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    searchUser(search): Observable<any> {\r\n        let headers = new HttpHeaders({'Content-Type':'application/json'});\r\n        return this.http.post('users/search', search, {headers: headers});\r\n    }\r\n\r\n    getRecommendedJobs(): Observable<any>{\r\n        let headers = new HttpHeaders({'Content-Type':'application/json'});\r\n        return this.http.post('users/search', '', {headers: headers});\r\n    }\r\n\r\n    getAddress() : Observable<any>{\r\n        return this.http.get('https://ipinfo.io/geo');\r\n        }\r\n\r\n    setAddress(res : any){\r\n        this.city = res.city;\r\n        this.region = res.region;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ToastrConfig, ToastrService} from \"ngx-toastr\";\r\n\r\n@Injectable()\r\nexport class ToasterService {\r\n\r\n  constructor(private toastr: ToastrService) {\r\n\r\n  }\r\n\r\n    success(message: string) {\r\n        this.toastr.success(message);\r\n    }\r\n    info(message: string) {\r\n        this.toastr.info(message);\r\n    }\r\n    warning(message: string) {\r\n        this.toastr.warning(message);\r\n    }\r\n    error(message: string) {\r\n        this.toastr.error(message);\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidateService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    validateRegister(user) {\r\n        if (user.email == undefined || user.password == undefined || user.lastName == undefined || user.firstName == undefined || user.skill == undefined || user.city == undefined || user.region == undefined) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    validateNotNull(value) {\r\n        if (value == undefined || value == \"\") {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    serverUrl: \"http://localhost:8080/\"\r\n};\r\n","import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {enableProdMode} from '@angular/core';\r\nimport {environment} from './environments/environment';\r\nimport {AppModule} from './app/app.module';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}